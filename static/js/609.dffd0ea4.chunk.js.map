{"version":3,"file":"static/js/609.dffd0ea4.chunk.js","mappings":"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","sources":["components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactsItem/ContactsItem.styled.jsx","components/Contacts/ContactsItem/ContactsItem.jsx","components/Contacts/Contact-List/Contact-List.styled.jsx","components/Contacts/Contact-List/Contact-list.jsx","components/Contacts/Form/Form.styled.jsx","components/Contacts/Form/Form.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Title = styled.label`\n  display: block;\n\n  text-align: center;\n  padding-bottom: 10px;\n  input {\n    display: block;\n    width: 300px;\n    margin: 10px auto;\n    text-align: center;\n    :hover {\n      border-color: #e84a5f;\n    }\n  }\n`;\n","import { Title } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const changeFilter = e => {\n    const { value } = e.currentTarget;\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <Title>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={changeFilter} />\n    </Title>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Contact = styled.p`\n  display: flex;\n\n  width: 350px;\n  justify-content: space-between;\n  button {\n    border: 1px, solid, black;\n    border-radius: 5px;\n    background-color: white;\n\n    cursor: pointer;\n    :hover {\n      background-color: #e84a5f;\n    }\n  }\n`;\n","import { Contact } from './ContactsItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nexport const Item = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Contact>\n      <span>\n        <span>{name}:</span> <span> {number}</span>\n      </span>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </Contact>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 20px;\n\n  h2 {\n    display: block;\n    text-align: center;\n    margin: 0 auto;\n  }\n  ol {\n    border: 1px solid ;\n    display: block;\n    max-width: 400px;\n    min-height: 100px;\n    margin: 0 auto;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Filter } from '../Filter/Filter';\nimport { Item } from '../ContactsItem/ContactsItem';\nimport { Container } from './Contact-List.styled';\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contactsList);\n\n  const filter = useSelector(state => state.filter);\n\n  const normFilter = filter.toLocaleLowerCase();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normFilter)\n  );\n  visibleContacts.sort(function (a, b) {\n    const nameA = a.name.toLowerCase();\n    const nameB = b.name.toLowerCase();\n    if (nameA < nameB)\n      //сортируем строки по возрастанию\n      return -1;\n    if (nameA > nameB) return 1;\n    return 0; // Никакой сортировки\n  });\n  return (\n    <Container>\n      <h2>Contacts</h2>\n      <Filter />\n      <ol>\n        {visibleContacts.map(contact => (\n          <li key={contact.id}>\n            <Item name={contact.name} number={contact.number} id={contact.id} />\n          </li>\n        ))}\n      </ol>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  padding-top: 20px;\n  margin-bottom: 16px;\n\n  button {\n    display: block;\n    font-size: 18px;\n    width: 150px;\n    margin: 0 auto;\n\n    border: 1px, solid, black;\n    border-radius: 5px;\n    background-color: white;\n\n    cursor: pointer;\n    :hover {\n      background-color: #e84a5f;\n    }\n  }\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n\n  display: block;\n  width: 300px;\n  padding-bottom: 20px;\n  margin: 0 auto;\n  input {\n    width: 300px;\n    display: block;\n    margin: 0 auto;\n    :hover {\n      border-color: #e84a5f;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { ContactForm, Label } from './Form.styled';\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.contactsList);\n  const dispatch = useDispatch();\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const writeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const createContact = () => {\n    const newContact = { name, number };\n\n    contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : dispatch(addContact(newContact));\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    createContact();\n    reset();\n  };\n\n  return (\n    <ContactForm onSubmit={formSubmit}>\n      <Label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={writeInput}\n        />\n      </Label>\n      <Label>\n        Tell:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={writeInput}\n        />\n      </Label>\n      <button type=\"submit\">Add Contact</button>\n    </ContactForm>\n  );\n};\n","import { ContactList } from 'components/Contacts/Contact-List/Contact-list';\nimport { Form } from 'components/Contacts/Form/Form';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'blok',\n  },\n  title: {\n    textAlign: 'center',\n  },\n};\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>Phonebook</h2>\n      <Form />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Title","styled","Filter","dispatch","useDispatch","filter","useSelector","state","type","name","value","onChange","e","currentTarget","updateFilter","Contact","Item","number","id","onClick","deleteContact","Container","ContactList","contacts","contactsList","normFilter","toLocaleLowerCase","visibleContacts","contact","includes","sort","a","b","nameA","toLowerCase","nameB","map","ContactForm","Label","Form","useState","setName","setNumber","writeInput","onSubmit","preventDefault","newContact","find","alert","addContact","createContact","pattern","title","required","styles","container","minHeight","display","textAlign","PhoneBook","useEffect","fetchContacts","style"],"sourceRoot":""}